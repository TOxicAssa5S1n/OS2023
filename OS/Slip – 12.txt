Slip – 12
Q.1 Write an MPI program to calculate sum and average randomly generated 1000
numbers (stored in array) on a cluster.
Ans 
 int main(int argc, char *argv[]) { 
int rank, size; 
int i, sum = 0; 
int data[ARRAY_SIZE]; 
int local_sum = 0; 
MPI_Init(&argc, &argv); 
MPI_Comm_rank(MPI_COMM_WORLD, &rank); 
MPI_Comm_size(MPI_COMM_WORLD, &size); 
// Generate random data 
if (rank == 0) 
{ 
printf("Generating random data...\n"); 
for (i = 0; i < ARRAY_SIZE; i++) 
{ 
data[i] = rand() % 100; 
} 
} 
// Scatter data to all processes 
MPI_Scatter(data, ARRAY_SIZE/size, MPI_INT, data, ARRAY_SIZE/size, MPI_INT, 0, MPI_COMM_WORLD); 
// Calculate local sum 
for (i = 0; i < ARRAY_SIZE/size; i++) 
{ 
local_sum += data[i]; 
} 
// Reduce local sums to get the final sum 
MPI_Reduce(&local_sum, &sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD); 
// Print the final sum 
if (rank == 0) { 
printf("The sum is: %d\n", sum); 
} 
MPI_Finalize(); 
return 0; 
}

Q.2 Write a simulation program for disk scheduling using C-LOOK algorithm. Accept
total number of disk blocks, disk request string, and current head position from the user.
Display the list of request in the order in which it is served. Also display the total number
of head moments.
23, 89, 132, 42, 187, 69, 36, 55
Start Head Position: 40
Direction: Right

Ans  		 No Answer
